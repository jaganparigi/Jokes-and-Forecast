const a = [
  1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3,
  3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 100, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1,
  1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1,
  3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2,
  3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3,
  4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1,
  1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
  1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3,
  3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1,
  1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1,
  1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2,
  1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1,
  1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1,
  3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2,
  3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3,
  4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1,
  1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
  1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3,
  3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1,
  1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1,
  1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2,
  1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1,
  1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1,
  3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2,
  3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3,
  4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1,
  1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
  1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3,
  3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1,
  1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1,
  1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2,
  1, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 3, 2, 1, 3, 3, 3, 4, 1,
  1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
];

function t(array) {
  console.time("start");
  const length = array.length;
  for (let i = 0; i < length; i++) {
    let count = 0;
    for (let j = 0; j < length; j++) {
      if (array[i] === array[j]) {
        count++;
      }
    }
    if (count === 1) {
      console.timeEnd("start");
      return array[i];
    }
  }
}

function optimized(array) {
  console.time("optimized");
  const cache = {};
  array.forEach((element) => {
    cache[element] = cache[element] ? cache[element] + 1 : 1;
    // cache[element] = (cache[element] ?? 0) + 1;
  });
  for (const key in cache) {
    if (cache[key] === 1) {
      console.timeEnd("optimized");
      return key;
    }
  }
}

console.log(t(a));
console.log(optimized(a));
